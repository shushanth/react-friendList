exports[`Component: <FriendPagination/> should render without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FriendPagination
    pageChange={[Function]}
    pageSize={2}
    selectedPage={1}
    totalPages={5} />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Pagination
        pageChange={undefined}
        pageSize={2}
        selectedPage={1}
        totalPages={5} />,
      "className": "",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "pageChange": undefined,
        "pageSize": 2,
        "selectedPage": 1,
        "totalPages": 5,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Pagination
          pageChange={undefined}
          pageSize={2}
          selectedPage={1}
          totalPages={5} />,
        "className": "",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "pageChange": undefined,
          "pageSize": 2,
          "selectedPage": 1,
          "totalPages": 5,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
